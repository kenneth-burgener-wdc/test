name: PR Labels
run-name: Build by ${{ github.actor }} (branch ${{ github.head_ref || github.ref_name }})
on:
  pull_request:
    types:
      - labeled
      - unlabeled
    branches:
      - main
      - development*
      - releases/**

jobs:
  build:
    # if: github.event.label.name == 'build' && github.event.action == 'labeled'
    #     github.event_name == 'pull_request'
    #     github.event.action == 'labeled'

    # uses: actions/checkout@v3
    #uses: ./.github/actions/happy/

    runs-on: [ubuntu-latest]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a action
      - name: Run happy
        if: github.event.label.name == 'build' && github.event.action == 'labeled'
        id: run-happy
        uses: ./.github/actions/happy
        with:
          RUNNER_ID: run-happy
          NAME: hoard
          # MY_SECRET: ${{ secrets.MYSECRET }}
        env:
          MY_SECRET: ${{ secrets.MY_SECRET }}
          MY_VAR: ${{ vars.MY_VAR }}

      # Runs a command
      - name: Run a command
        if: github.event.label.name == 'build' && github.event.action == 'labeled'
        run: bash test.sh
        env:
          MY_SECRET: ${{ secrets.MY_SECRET }}
          MY_VAR: ${{ vars.MY_VAR }}

      # # Runs a action
      # - name: Run Dynamic
      #   if: github.event.label.name == 'dynamic' && github.event.action == 'labeled'
      #   id: run-dynamic
      #   uses: ./.github/actions/dynamic
      #   with:
      #     RUNNER_ID: run-dynamic

  generate:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.set-MATRIX.outputs.MATRIX }}
    steps:
    - id: set-MATRIX
      run: |
        echo "MATRIX={}" >> $GITHUB_OUTPUT
        # echo "MATRIX={\"include\":[{\"runson\":[\"CI\",\"MORE\"],\"task\":\"joe\"},{\"runson\":[\"CI\",\"LESS\"],\"task\":\"bob\"}]}" >> $GITHUB_OUTPUT
  jober:
    needs: generate
    runs-on: ${{ matrix.runson }}
    strategy:
      matrix: ${{fromJson(needs.generate.outputs.matrix)}}
    steps:
    - run: hostname
    - run: echo ${{ matrix.runson }}
    - run: echo ${{ matrix.task }}

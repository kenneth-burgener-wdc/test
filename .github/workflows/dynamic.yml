name: Dynamic Jobs
run-name: Test
on:
  workflow_dispatch:
    inputs:
      Go:
        required: false
        type: string
      POWER:
        required: false
        type: string
  workflow_call:
    inputs:
      POWER:
        required: false
        type: string

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.set-MATRIX.outputs.MATRIX }}
    steps:
    - name: Build Matrix
      id: set-MATRIX
      run: echo "MATRIX={\"include\":[{\"runson\":[\"CI\",\"MORE\"],\"task\":\"joe\"},{\"runson\":[\"CI\",\"LESS\"],\"task\":\"bob\"}]}" >> $GITHUB_OUTPUT
  jober:
    needs: generate
    runs-on: ${{ matrix.runson }}
    strategy:
      matrix: ${{fromJson(needs.generate.outputs.matrix)}}
    steps:
    - run: hostname
    - run: echo ${{ matrix.runson }}
    - run: echo ${{ matrix.task }}

# MATRIX=
# {
#   "include": [
#     {
#       "runson": [
#         "CI",
#         "MORE"
#       ],
#       "task": "joe"
#     },
#     {
#       "runson": [
#         "CI",
#         "LESS"
#       ],
#       "task": "bob"
#     }
#   ]
# }

# Creates 3 jobs:
# generate
# jober (CI, MORE, joe) - looking for node with labels CI, MORE
# jober (CI, LESS, bob) - looking for node with labels CI, LESS
